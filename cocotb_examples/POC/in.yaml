# This YAML file defines the configuration for generating testbenches in a 
# hardware verification workflow using Verilog sources. It is used by a tool 
# to automatically generate the required files, set up the simulator, and 
# execute test cases for the specified Device Under Test (DUT). 



# Output directory where files will be generated. Do not start with '/' 
# to avoid being interpreted as an absolute path on Unix systems.
output_dir: out

# Template type specifies the type of test architecture used for verification. 
# Options are 'simple' for a direct assertion-based approach or 'structured' 
# for a more comprehensive architecture that includes components like scoreboard, 
# checker, and monitor for detailed validation.
template_type: simple
# template_type: structured

# Module and dependencies
# Section to define Verilog sources and their include directories (use absolute paths).
verilog_sources_and_include_dirs:
  # List of Verilog files to be used in the simulation.
  - verilog_sources:
    # Section to specify individual Verilog files.
    - specific_files:

    # Directory to load all Verilog files from the specified paths.
    - load_all_from:
      # - /home/loop/Documents/HW/ALU
      - D:\D\Files\program_works\Logic_Circuit\Processors\RISCV\Quartus\CE4302-Project-II-main\cpu\Modules\RV32I
      - D:\D\Files\program_works\Logic_Circuit\Processors\RISCV\Quartus\CE4302-Project-II-main\cpu\Modules\Multiplexers
      - D:\D\Files\program_works\Logic_Circuit\Processors\RISCV\Quartus\CE4302-Project-II-main\cpu\Modules\Integer_Arithmetic
      - D:\D\Files\program_works\Logic_Circuit\Processors\RISCV\Quartus\CE4302-Project-II-main\cpu\Modules\Complements

  # Include directories for Verilog files. These usually contain shared macros or definitions.
  - verilog_include_dirs:
    # Section to specify individual include files.
    - specific_files:

    # Directory to load all include files from the specified paths.
    - load_all_from:

# Simulator to be used for the simulation. Options are 'verilator' or 'questa'.
simulator: verilator
# simulator: questa

# Time scale and precision for the simulation (1ns for time, 1ps for precision).
# timescale_timeprecision: 1ns/1ps
timescale_timeprecision: 1ns/1ps

# Name of the DUT (Device Under Test), which is the Verilog module being tested (do not use the extention).
DUT_name: ALU_RV32I

# Name of the testbench template to be used for the DUT (do not use the extention).
template_name: tbs

# Definition of DUT inputs.
DUT_inputs:
  # List of clock signals that control the DUT.
  - clocks:
  
  # List of reset signals for the DUT.
  - resets:
  
  # The rest of input signals.
  - op
  - a  
  - b

# Definition of DUT outputs.
DUT_outputs:
  - o

test_error: (?i)error
test_warning: (?i)warning
general_error: (?i)error
general_warning: (?i)warning

# Optional key
# quartus_project_path:
quartus_project_path: D:\D\Files\program_works\Logic_Circuit\Processors\RISCV\Quartus\CE4302-Project-II-main\cpu

# Optional key
# Define the command for synthesizability verification of the module.
synthesizability_command: quartus_sh --flow compile Logic_Circuit_Main
# synthesizability_command:
